{"version":3,"file":"4.360a5a58a109a768a1a3.hot-update.js","sources":["webpack:///Data/Random.js","webpack:///components/block.js"],"sourcesContent":["/*\nAuthor: Piotr Ryszewski\nDate: 24.05.2018\nScope: Methods for generating random data\n*/\n\"use strict\"\n\n//Libraries\nconst random = require(\"random-js\")();\n//Data import\nconst nameBase = require(\"./Source/Name.js\");\nconst lastNameBase = require(\"./Source/LastName.js\");\nconst mailBase = require(\"./Source/MailDomains.js\");\nconst countriesBase = require(\"./Source/Countries.js\");\nconst citiesBase = require(\"./Source/Cities.js\");\nconst streetBase = require(\"./Source/Streets.js\");\nconst dictionary = require(\"./Source/Dictionary.js\");\nconst personSchema = require(\"./Source/PersonSchema.js\");\n\nmodule.exports = class RandomData {\n\n  /*\n  Scope: Helper function to return random value from an array\n  @param data - Array of values\n  */\n  getRandomValue(data) {\n    var index = random.integer(0, data.length - 1);\n    var value = data[index];\n    return value;\n  }\n  getRandomDigit() {\n    return random.integer(0, 9).toString();\n  }\n\n  getRandomMailAddress() {\n    var firstName = this.getRandomValue(nameBase);\n    var lastName = this.getRandomValue(lastNameBase);\n    var mailSuffix = this.getRandomValue(mailBase);\n    var mailAddress = firstName + \".\" + lastName + \"@\" + mailSuffix;\n    return mailAddress;\n  }\n\n  getRandomStreetName() {\n    var randomNoun = this.getRandomValue(dictionary.noun);\n    var randomType = this.getRandomValue(streetBase.type);\n    var randomDirection = this.getRandomValue(streetBase.direction);\n    var street;\n    if (random.bool()) {\n      street = randomNoun + \" \" + randomType;\n    } else {\n      street = randomNoun + \" \" + randomType + \" \" + randomDirection;\n    }\n    return street;\n  }\n\n  getRandomStreetNumber() {\n    var rand = random.integer(1, 300);\n    return rand;\n  }\n\n  getRandomFlatNumber() {\n    var rand = random.integer(1, 150);\n    return rand;\n  }\n\n  getRandomZipCode() {\n    var zipCode =\n      this.getRandomDigit() +\n      this.getRandomDigit() +\n      \"-\" +\n      this.getRandomDigit() +\n      this.getRandomDigit() +\n      this.getRandomDigit();\n    return zipCode;\n  }\n\n  getRandomUsername() {\n    var adj = this.getRandomValue(dictionary.adjective);\n    var noun = this.getRandomValue(dictionary.noun);\n    if (random.bool()) {\n      return adj + this.getRandomDigit() + this.getRandomDigit();\n    } else if (random.bool()) {\n      return adj + \"_\" + noun + this.getRandomDigit() + this.getRandomDigit();\n    } else {\n      return adj + noun + this.getRandomDigit() + this.getRandomDigit();\n    }\n  }\n\n  getRandomPassword() {\n    return random.string(15);\n  }\n\n  getRandomTelephone() {\n    return (\n      this.getRandomDigit() +\n      this.getRandomDigit() +\n      this.getRandomDigit() +\n      this.getRandomDigit() +\n      this.getRandomDigit() +\n      this.getRandomDigit() +\n      this.getRandomDigit() +\n      this.getRandomDigit() +\n      this.getRandomDigit()\n    );\n  }\n  getRandomStreetAddress() {\n    if (random.bool()) {\n      return (\n        this.getRandomStreetName() +\n        \" \" +\n        this.getRandomStreetNumber() +\n        \" \" +\n        this.getRandomFlatNumber()\n      );\n    } else {\n      return this.getRandomStreetName() + \" \" + this.getRandomStreetNumber();\n    }\n  }\n\n  getPerson() {\n    let person = personSchema;\n    person.firstName = this.getRandomValue(nameBase);\n    person.lastName = this.getRandomValue(lastNameBase);\n    person.mail = this.getRandomMailAddress();\n    person.username = this.getRandomUsername();\n    person.password = this.getRandomPassword();\n    person.telephone = this.getRandomTelephone();\n    person.country = this.getRandomValue(countriesBase);\n    person.street = this.getRandomStreetName();\n    person.streetNumber = this.getRandomStreetNumber();\n    person.flatNumber = this.getRandomFlatNumber();\n    person.zipCode = this.getRandomZipCode();\n    person.streetAddress = this.getRandomStreetAddress();\n    return person;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// Data/Random.js","import React, { Component } from \"react\";\nimport {Container, List, Table, Button} from \"semantic-ui-react\";\nimport RandomData from \"../Data/Random\"\nconst data = new RandomData();\n\nclass Block extends Component{\n\n  static async getInitialProps(props) {\n    return {\n      firstName: person.firstName,\n      lastName: person.lastName,\n      username: person.username,\n      password: person.password,\n      telephone: person.telephone,\n      country: sperson.country,\n      streetName: person.streetName,\n      streetNumber: person.streetNumber,\n      flatNumber: person.flatNumber,\n      zipCode: person.zipCode,\n      streetAddress: \"todo\"\n    };\n  }\n\n  render(){\n    return(\n      <Container textAlign=\"center\" text='true'>\n        <div>\n          <Table celled basic='very' textAlign=\"center\" columns='2' size='small'>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>First Name</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Last Name</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Username</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Password</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Telephone</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Country</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Street Name</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Street Number</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Flat Number</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Zip Code</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Street Address</Table.Cell>\n                <Table.Cell>Value</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Button content=\"Generate!\" primary />\n          </div>\n        </Container>\n\n    );\n  }}\n\n  export default Block;\n\n\n\n// WEBPACK FOOTER //\n// components/block.js"],"mappings":";;;;;;AAAA;;;;;AAKA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;;;;AAFA;AAOA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAYA;AACA;AAbA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAlCA;AAAA;AAAA;AAqCA;AACA;AACA;AAvCA;AAAA;AAAA;AA0CA;AACA;AACA;AA5CA;AAAA;AAAA;AA+CA;AAOA;AACA;AAvDA;AAAA;AAAA;AA0DA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnEA;AAAA;AAAA;AAsEA;AACA;AAvEA;AAAA;AAAA;AA0EA;AAWA;AArFA;AAAA;AAAA;AAuFA;AACA;AAOA;AACA;AACA;AACA;AAlGA;AAAA;AAAA;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;;;;;;;;;;;;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAkzEA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;;;;;;;;;;;;;;;;AAJA;AACA;AA4EA;AAAA;;;;;;;;;;;;AA/EA;AAEA;;;;;;;;;;A","sourceRoot":""}